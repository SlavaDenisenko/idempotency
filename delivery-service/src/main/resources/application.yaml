server:
  port: ${SERVER_PORT}

spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: ${DB_DRIVER_CLASS_NAME}
  jpa:
    hibernate:
      ddl-auto: ${JPA_GENERATION}
  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVERS}
    topics:
      book-delivery: ${KAFKA_TOPIC_BOOK_DELIVERY}
      delivery-compensate: ${KAFKA_TOPIC_DELIVERY_COMPENSATE}
      order-results: ${KAFKA_TOPIC_ORDER_RESULTS}
    template:
      default-topic: ${spring.kafka.topics.book-delivery}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: ${KAFKA_GROUP_ID}
      properties:
        spring:
          json:
            type:
              mapping: event:com.denisenko.event.DeliveryEvent